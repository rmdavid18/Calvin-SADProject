// <auto-generated />
using System;
using Capstonep2.Infrastructure.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalvinSAD.Migrations
{
    [DbContext(typeof(DefaultDBContext))]
    [Migration("20230527155828_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Appointment", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FDescription")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PatientID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Visit")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PatientID");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptPayment", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FindingId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("FindingId");

                    b.ToTable("ApptPayment");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptProvider", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmetId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentID");

                    b.HasIndex("ProviderId");

                    b.ToTable("ApptProviders");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptSevice", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ApptSevices");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Client", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ID = new Guid("2b792220-f333-49ec-abe2-3a6fc4edb0c2"),
                            Address = "Luakan,Dinalupihan, Bataan",
                            BirthDate = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Luisa Katrina",
                            Gender = 0,
                            LastName = "Reyes",
                            MiddleName = "Pangilinan"
                        },
                        new
                        {
                            ID = new Guid("5a7e7bc3-8816-41df-b44d-eeb60ae99b5b"),
                            Address = "Luakan,Dinalupihan, Bataan",
                            BirthDate = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Clarissa Joy",
                            Gender = 0,
                            LastName = "Flores",
                            MiddleName = "Gozon"
                        },
                        new
                        {
                            ID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            Address = "Bacong,Hermosa, Bataan",
                            BirthDate = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Raniel",
                            Gender = 1,
                            LastName = "David",
                            MiddleName = "Mallari"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Payment", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentID")
                        .HasColumnType("char(36)");

                    b.Property<string>("FName")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("AppointmentID");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            ID = new Guid("efd1381a-4c3d-4260-aaf2-04a0a26591bc"),
                            FName = "Cash"
                        },
                        new
                        {
                            ID = new Guid("672a4093-269e-47aa-879c-738cf2bf5e55"),
                            FName = "Checks"
                        },
                        new
                        {
                            ID = new Guid("332d1fb4-35f1-48d8-ac19-f66472fce607"),
                            FName = "Debit Card"
                        },
                        new
                        {
                            ID = new Guid("629d1da5-bf42-4dd5-9eda-614ba1260f03"),
                            FName = "Mobile Payment"
                        },
                        new
                        {
                            ID = new Guid("ab7f6ecf-7e82-4281-b90d-69f4ef72b66a"),
                            FName = "Electronic Bank Transfer"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Provider", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentID");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f28dca4-e0f4-4798-a823-f44cdcd2a3b0"),
                            Name = "CJ"
                        },
                        new
                        {
                            Id = new Guid("70b4d9b7-e5bf-4da4-a355-a0af2da1d587"),
                            Name = "SID"
                        },
                        new
                        {
                            Id = new Guid("912f8c3e-3ca7-4703-a858-2b9bc7612096"),
                            Name = "GING"
                        },
                        new
                        {
                            Id = new Guid("3042ec44-a9b3-4bee-8a3d-14fd9f5167f7"),
                            Name = "VANGIE"
                        },
                        new
                        {
                            Id = new Guid("9f87d3db-3842-4a4d-8552-b568c7f44620"),
                            Name = "5"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Role", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            Abbreviation = "Pt",
                            Description = "One who receives medical treatment",
                            Name = "patient"
                        },
                        new
                        {
                            ID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101"),
                            Abbreviation = "Adm",
                            Description = "One who manages the system",
                            Name = "admin"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Service", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentID");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32d18f17-4f8f-4534-9394-703261e2390b"),
                            Name = "Body Massage"
                        },
                        new
                        {
                            Id = new Guid("10cbac3c-2dbf-45c9-8832-e6d2dd0b2168"),
                            Name = "Foot spa"
                        },
                        new
                        {
                            Id = new Guid("0bd555b4-5d90-4033-abd7-2b19dfce9f41"),
                            Name = "Manicure"
                        },
                        new
                        {
                            Id = new Guid("e0d9efd5-c988-4692-aafd-c0096b0093ff"),
                            Name = "Pedicure"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.User", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ClientID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("RoleID")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Address = "Dinalupihan, Orani, Bataan",
                            BirthDate = new DateTime(2001, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = new Guid("2b792220-f333-49ec-abe2-3a6fc4edb0c2"),
                            Email = "luisa@yahoo.com",
                            FirstName = "Luisa Katrina",
                            Gender = 0,
                            LastName = "Pangilinan",
                            MiddleName = "Reyes",
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a")
                        },
                        new
                        {
                            ID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Address = "Dinalupihan, Orani, Bataan",
                            BirthDate = new DateTime(2001, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = new Guid("5a7e7bc3-8816-41df-b44d-eeb60ae99b5b"),
                            Email = "joy@yahoo.com",
                            FirstName = "Clarissa Joy",
                            Gender = 1,
                            LastName = "Gozon",
                            MiddleName = "Flores",
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a")
                        },
                        new
                        {
                            ID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Address = "Dinalupihan, Orani, Bataan",
                            BirthDate = new DateTime(2001, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            Email = "client@yahoo.com",
                            FirstName = "Calvin",
                            Gender = 1,
                            LastName = "CLient",
                            MiddleName = "NicDao",
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a")
                        },
                        new
                        {
                            ID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Address = "Dinalupihan, Orani , Bataan",
                            BirthDate = new DateTime(2002, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@yahoo.com",
                            FirstName = "Calvin",
                            Gender = 0,
                            LastName = "Admin",
                            MiddleName = "NicDao",
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101")
                        },
                        new
                        {
                            ID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Address = "Dinalupihan, Orani , Bataan",
                            BirthDate = new DateTime(2002, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Admin@yahoo.com",
                            FirstName = "Roberto",
                            Gender = 0,
                            LastName = "Escobar",
                            MiddleName = "Adan",
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101")
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.UserLogin", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Key")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("UserLogins");

                    b.HasData(
                        new
                        {
                            ID = new Guid("94c65fc2-0f4b-461d-a9b2-b4b835f917ba"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Value = "$2a$11$fJTbKjfgB.3wkBvoByWGI.d2P1VRZw2GL8LIQEhSRZc2bLh/uu9wi"
                        },
                        new
                        {
                            ID = new Guid("d913bf27-d4ce-4209-87c8-66ae013a68ab"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("1c820215-20b5-4d1c-97c8-20c353e469d7"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("29bbd546-d92a-4d58-af04-bffaef438574"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Value = "$2a$11$yW26u6x85VO9L5AqCkYae.Qq0PYb9/ZBT2aBqFqthxUOQrCcooVPG"
                        },
                        new
                        {
                            ID = new Guid("ffcd7c53-07e9-47ea-99d6-bde03a60b42d"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("0ddfe7e3-ab0d-4aa5-9252-44d0848001bd"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("3966e31b-6075-437d-ae0e-94632179904e"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Value = "$2a$11$BOfs09XszwdzkUPemGZP9Ohkm0vxYQ.7e6PVii0FYJq7cRRtD.1m."
                        },
                        new
                        {
                            ID = new Guid("ddc9a805-0019-4927-a176-1ea4cfa84b2f"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("2e55d6ca-8739-4775-b415-5c420aa99730"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("fa3146ca-8a27-414b-a8a9-9a0f5072de0a"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "$2a$11$FgRfpfXVpIGI68n9OWC5Muc/sBQoNGM5lKKeOdY49RHxgz4VJRQWK"
                        },
                        new
                        {
                            ID = new Guid("9bde566c-acf2-4128-ab0b-16f24b9b6f1b"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("6e862a66-7f02-468a-b4c5-e5813b2694cc"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("54506ffe-9d58-46cf-a6ce-8cebc329b7b9"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "$2a$11$ufztDVjQ/N6BPxAW1Bt/COPsOf3D5GLhkCcg14RHr8zVn13TWVKrG"
                        },
                        new
                        {
                            ID = new Guid("d1af8473-8c02-4319-b8b6-dc6339fef60d"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("cd0fbd6f-88ea-4ba0-bfd2-e89885b00754"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "0"
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.UserRole", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("RoleID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a695b208-ebd7-4b8b-8685-173f3d4ca9af"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            UserID = new Guid("0352c124-f290-4f99-b1a5-e235cafcd836")
                        },
                        new
                        {
                            Id = new Guid("b8bb0926-0bca-45ae-be02-d9ee62def8d0"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            UserID = new Guid("d7dbd16f-1c71-4415-a147-22a2b428bf95")
                        },
                        new
                        {
                            Id = new Guid("dfb463af-ecb6-45e2-9c0e-c0946a05cd3e"),
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101"),
                            UserID = new Guid("1bd5f519-b891-4491-9a7c-a86cd0c2a15e")
                        },
                        new
                        {
                            Id = new Guid("cd06f1eb-6dbb-4148-a322-1579ff36e2ad"),
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101"),
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4")
                        },
                        new
                        {
                            Id = new Guid("d0f044f2-4bad-47d6-a085-ff099e556ef6"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398")
                        });
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Appointment", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptPayment", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Payment", "Finding")
                        .WithMany()
                        .HasForeignKey("FindingId");

                    b.Navigation("Appointment");

                    b.Navigation("Finding");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptProvider", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentID");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId");

                    b.Navigation("Appointment");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.ApptSevice", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId");

                    b.Navigation("Appointment");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Payment", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", null)
                        .WithMany("Findings")
                        .HasForeignKey("AppointmentID");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Provider", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", null)
                        .WithMany("Providers")
                        .HasForeignKey("AppointmentID");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Service", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Appointment", null)
                        .WithMany("Services")
                        .HasForeignKey("AppointmentID");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.User", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.Navigation("Client");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.UserRole", b =>
                {
                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.HasOne("Capstonep2.Infrastructure.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Capstonep2.Infrastructure.Domain.Models.Appointment", b =>
                {
                    b.Navigation("Findings");

                    b.Navigation("Providers");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
